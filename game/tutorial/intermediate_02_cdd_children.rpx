#begin intermediate_02_01a
def render(self, width, height, st, at):
    new_render = renpy.Render(width, height)
    child_render = renpy.render(self.background, width, height, st, at)

    # size and half-size for convenience
    child_width, child_height = child_render.get_size()
    half_width, half_height = child_width // 2, child_height // 2

    # split the render into 4 rectangles
    lt = child_render.subsurface((0, 0, half_width, half_height))
    rt = child_render.subsurface((half_width, 0, half_width, half_height))
    lb = child_render.subsurface((0, half_height, half_width, half_height))
    rb = child_render.subsurface((half_width, half_height, half_width, half_height))

    max_distance = 100
    current_distance = abs(sin(st) * max_distance)
    
    # display the rectangles around the mouse pointer
    new_render.blit(lt, (self.x - half_width - current_distance, self.y - half_height - current_distance))
    new_render.blit(rt, (self.x + current_distance, self.y - half_height - current_distance))
    new_render.blit(lb, (self.x - half_width - current_distance, self.y + current_distance))
    new_render.blit(rb, (self.x + current_distance, self.y + current_distance))

    renpy.redraw(self, 0)
    return new_render 
#end intermediate_02_01a


#begin intermediate_02_02a
class Example_Child(renpy.Displayable):
    def __init__(self, image, **kwargs):
        super().__init__(**kwargs)
        self.image = image

    def render(self, width, height, st, at):
        return renpy.render(self.image, width, height, st, at)
#end intermediate_02_02a

#begin intermediate_02_02b
class Example(renpy.Displayable):

    def __init__(self, background, **kwargs):
        super().__init__(**kwargs)
        self.x, self.y = 0, 0
        
        image = renpy.displayable(background)
        child_render = renpy.render(image, 0, 0, 0, 0)
        width, height = child_render.get_size()
        half_width, half_height = int(width) // 2, int(height) // 2

    ...
#end intermediate_02_02b

#begin intermediate_02_02c
class Example(renpy.Displayable):

    def __init__(self, background, **kwargs):
        super().__init__(**kwargs)
        self.x, self.y = 0, 0
        
        image = renpy.displayable(background)
        child_render = renpy.render(image, 0, 0, 0, 0)
        width, height = child_render.get_size()
        half_width, half_height = int(width) // 2, int(height) // 2

        self.children = [
            Example_Child(Crop((0, 0, half_width, half_height), image)),
            Example_Child(Crop((half_width, 0, half_width, half_height), image)),
            Example_Child(Crop((0, half_height, half_width, half_height), image)),
            Example_Child(Crop((half_width, half_height, half_width, half_height), image))
        ]

    ...
#end intermediate_02_02c

#begin intermediate_02_02d
class Example(renpy.Displayable):
    ...

    def render(self, width, height, st, at):
        new_render = renpy.Render(width, height)
        for child in self.children:
            new_render.place(child, self.x, self.y)
        return new_render
#end intermediate_02_02d

#begin intermediate_02_03a
    self.children = [
        Child() ...
    
    # vvvvv

    self.children = [
        ( Child(), xoffset, yoffset ) ...
#end intermediate_02_03a

#begin intermediate_02_03b
    self.children = [
        (Example_Child(Crop((0, 0, half_width, half_height), image)), -half_width, -half_height),
        (Example_Child(Crop((half_width, 0, half_width, half_height), image)), 0, -half_height),
        (Example_Child(Crop((0, half_height, half_width, half_height), image)), -half_width, 0),
        (Example_Child(Crop((half_width, half_height, half_width, half_height), image)), 0, 0)
    ]
#end intermediate_02_03b

#begin intermediate_02_03c
    def render(self, width, height, st, at):
        new_render = renpy.Render(width, height)

        for child, offset_x, offset_y in self.children:
            new_render.place(child, self.x + offset_x, self.y + offset_y)

        return new_render 
#end intermediate_02_03c

#begin intermediate_02_04a
    self.children = [
        Example_Child(image, crop=(0, 0, half_width, half_height), xoffset=-half_width, yoffset=-half_height),
        Example_Child(image, crop=(half_width, 0, half_width, half_height), xoffset=0, yoffset=-half_height),
        Example_Child(image, crop=(0, half_height, half_width, half_height), xoffset=-half_width, yoffset=0),
        Example_Child(image, crop=(half_width, half_height, half_width, half_height), xoffset=0, yoffset=0),
    ]
#end intermediate_02_04a

#begin intermediate_02_04b
    def render(self, width, height, st, at):
        new_render = renpy.Render(width, height)

        for child in self.children:
            new_render.place(child, self.x + child.xoffset, self.y + child.yoffset)

        return new_render
#end intermediate_02_04b

#begin intermediate_02_04c
class Example_Child(renpy.Displayable):
    def __init__(self, image, crop, xoffset, yoffset, **kwargs):
        super().__init__(**kwargs)
        self.image = image
        self.crop = crop
        self.xoffset, self.yoffset = xoffset, yoffset

#end intermediate_02_04c

#begin intermediate_02_04d
class Example_Child(renpy.Displayable):
    def __init__(self, image, crop, xoffset, yoffset, **kwargs):
        super().__init__(**kwargs)
        self.image = image
        self.crop = crop
        self.xoffset, self.yoffset = xoffset, yoffset

    def render(self, width, height, st, at):
        img = Transform(self.image, crop=self.crop, zoom=abs(sin(st)))
#end intermediate_02_04d

#begin intermediate_02_04e
class Example_Child(renpy.Displayable):
    def __init__(self, image, crop, xoffset, yoffset, **kwargs):
        super().__init__(**kwargs)
        self.image = image
        self.crop = crop
        self.xoffset, self.yoffset = xoffset, yoffset

    def render(self, width, height, st, at):
        img = Transform(self.image, crop=self.crop, zoom=abs(sin(st)))
        render = renpy.render(img, width, height, st, at)
        renpy.redraw(self, 0)
        return render
#end intermediate_02_04e

#begin intermediate_02_05a
class Example_Child(renpy.Displayable):
    def __init__(self, image, crop, xoffset, yoffset, rotation=0, xshift=0, yshift=0, distance=0, transform=None, **kwargs):
        super().__init__(**kwargs)
        self.image = image
        self.crop = crop
        self.xoffset, self.yoffset = xoffset, yoffset

        # optional
        self.rotation = rotation
        self.xshift, self.yshift = xshift, yshift
        self.distance = distance
        self.transform = transform

        # we need to keep the initial offsets as well
        self.xinitial, self.yinitial = xoffset, yoffset
#end intermediate_02_05a

#begin intermediate_02_05b
transform tint_green:
    matrixcolor TintMatrix('#159357')

transform zoom_05:
    zoom 0.5
#end intermediate_02_05b

#begin intermediate_02_05c
Example_Child(image,
    crop=(0, 0, half_width, half_height),
    xoffset=-half_width, yoffset=-half_height,
    xshift=-1, yshift=-1,
    distance=100,
    rotation=15,
    transform=zoom_05),
#end intermediate_02_05c

#begin intermediate_02_05d
self.children = [
    Example_Child(image, crop=(0, 0, half_width, half_height),
        xoffset=-half_width, yoffset=-half_height,
        xshift=-1, yshift=-1, distance=100, rotation=15, transform=zoom_05),
    
    Example_Child(image, crop=(half_width, 0, half_width, half_height),
        xoffset=0, yoffset=-half_height,
        xshift=1, yshift=-1, distance=80, rotation=30),
    
    Example_Child(image, crop=(0, half_height, half_width, half_height),
        xoffset=-half_width, yoffset=0,
        xshift=-1, yshift=1, distance=60, transform=tint_green),
    
    Example_Child(image, crop=(half_width, half_height, half_width, half_height),
        xoffset=0, yoffset=0,
        xshift=1, yshift=1, distance=40, rotation=-60),
]
#end intermediate_02_05d

#begin intermediate_02_05e
class Example_Child(renpy.Displayable):
    ...

    def render(self, width, height, st, at):
        img = Transform(self.image, crop=self.crop, rotate=(st*self.rotation)%360)
        if callable(self.transform):
            img = self.transform(img)
#end intermediate_02_05e

#begin intermediate_02_05f
class Example_Child(renpy.Displayable):
    ...
    
    def render(self, width, height, st, at):
        img = Transform(self.image, crop=self.crop, rotate=(st*self.rotation)%360)
        if callable(self.transform):
            img = self.transform(img)

        self.xoffset = self.xinitial + sin(st) * self.distance * self.xshift
        self.yoffset = self.yinitial + cos(st) * self.distance * self.yshift

#end intermediate_02_05f

#begin intermediate_02_05g
class Example_Child(renpy.Displayable):
    ...
    
    def render(self, width, height, st, at):
        img = Transform(self.image, crop=self.crop, rotate=(st*self.rotation)%360)
        if callable(self.transform):
            img = self.transform(img)

        self.xoffset = self.xinitial + sin(st) * self.distance * self.xshift
        self.yoffset = self.yinitial + cos(st) * self.distance * self.yshift

        renpy.redraw(self, 0)
        return renpy.render(img, width, height, st, at)
#end intermediate_02_05g
